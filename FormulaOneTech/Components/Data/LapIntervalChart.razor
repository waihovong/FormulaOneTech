@using Models.Ergast;
@using AntDesign.Charts
@if (DriverSelected && GraphData != null)
{
    <div class="w-full">
        <Line Data="GraphData" Config="config" />
    </div>
}
else if (GraphData == null)
{
    <div>There was a problem fetching this.</div>
}

@code {
    private bool Reload = false;

    LineConfig config = new LineConfig()
        {
            Padding = "auto",
            XField = "lap",
            YField = "lap_time",
            Smooth = false,
            AutoFit = true,
            XAxis = new ValueCatTimeAxis
            {
                TickCount = 15,
                Title = new BaseAxisTitle
                {
                    Visible = true,
                    Text = "Lap Number",
                    Style = new TextStyle
                    {
                        FontWeight = 4,
                        Fill = "#ffffff",
                    }
                },
                Min = 0,
                Grid = new BaseAxisGrid
                {
                    Visible = true,
                },
            },
            Point = new LineViewConfigPoint
            {
                Visible = true
            },
            YAxis = new ValueAxis
            {
                Title = new BaseAxisTitle
                {
                    Visible = true,
                    Style = new TextStyle
                    {
                        Fill = "#ffffff"
                    },
                    Text = "Lap Time"
                },
                TickCount = 4,
                Min = -4,
            }
        };


    List<int> LapCount = new List<int>();

    object[] datas = new object[200];
    public object[] GraphData { get; set; }

    [Parameter]
    public bool DriverSelected { get; set; }

    [Parameter]
    public List<RaceMapper.TimingDto> TimingData { get; set; } = new List<RaceMapper.TimingDto>();

    [Parameter]
    public RaceMapper.LapIntervalDto DriverData { get; set; } = new RaceMapper.LapIntervalDto();

    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnParametersSetAsync()
    {
        var transformData = DriverData.Timings.Skip(2);

        if (TimingData != null && DriverSelected)
        {
            // DriverSelected = false;
            StateHasChanged();

            var data = transformData?.Select((timing, index) => new
            {
                lap = index + 2,
                lap_time = timing.Time,
                driver = timing.DriverId

            }).OrderBy(a => a.lap_time).ToArray();

            GraphData = data;

        }
    }
}