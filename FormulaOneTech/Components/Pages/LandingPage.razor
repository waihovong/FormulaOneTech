@inject FormulaOneTech.Services.Ergast.IErgastService _ergastService;
@using Models.Ergast;
<h3 class="text-[#E4EDF5] text-xl font-bold italic">Formula 1 Technical</h3>

@if(isLoading)
{
    <p>Loading</p>
}
else
{
    <div class="flex gap-4">
        <div class="flex flex-col gap-4">
            <div>
                <FormulaOneTech.Components.Drivers.DriverStandings/>
            </div>
            <div class="">
                <FormulaOneTech.Components.Constructors.ConstructorStandings/>
            </div>
        </div>
        <div class="flex w-full flex-col gap-4 text-white">
            <div>
                <FormulaOneTech.Components.Race.Race/>
            </div>
            <div class="bg-[#0000005e] flex gap-4 rounded-t-lg p-5 font-bold">
                <button @onclick="(() => ResultsViewHandler(1))" class=" @SelectedView(1) border-l-0 border-r-0 border-t-0"> <span class="hover:text-[#E4EDF5]">Race Results</span></button>
                <button @onclick="(() => ResultsViewHandler(2))" class=" @SelectedView(2) border-l-0 border-r-0 border-t-0"> <span class="hover:text-[#E4EDF5]">Engineering Pitwall</span></button>
            </div>
            <div class="flex w-full">
                @if (ResultsView == 1)
                {
                    <div class="w-full">
                        <FormulaOneTech.Components.Race.PreviousRace PreviousRaceDate="@HandlePreviousRaceDate" />
                    </div>
                }
                else if (ResultsView == 2)
                {
                    <div class="bg-opacity-60 flex w-full gap-4 overflow-y-auto rounded-lg bg-gray-800 bg-clip-padding p-5 backdrop-blur-lg backdrop-filter" style="margin-top:-20px">
                        <div class="flex flex-col gap-4">
                            <div>
                                <FormulaOneTech.Components.Engineering.EngineeringPitWall RaceDate="PreviousRaceDateTime" />
                            </div>
                            <div>
                                <FormulaOneTech.Components.Engineering.TeamRadio DriverList="DriversList"/>
                            </div>
                        </div>
                        <div class="flex">
                            <FormulaOneTech.Components.Engineering.Stints DriverList="DriversList" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}


@code {
    public List<Models.Ergast.Driver> Drivers { get; set; }
    public List<Models.Ergast.DriverStandings> DriversList { get; set; }

    private bool isLoading = true;

    private int ResultsView = 1;

    public EventCallback<DateTime?> PreviousRaceDate { get; set; }

    public DateTime? PreviousRaceDateTime { get; set; }
    protected override async Task OnInitializedAsync()
    {
        isLoading = false;
        // Drivers = await GetDriverList();
        DriversList = await GetDriverListWithConstructor();
    }

    private void ResultsViewHandler(int resultsView)
    {
        ResultsView = resultsView;
    }

    private void HandlePreviousRaceDate(DateTime? date)
    {
        PreviousRaceDateTime = date;
    }

    private string SelectedView(int resultView)
    {
        return ResultsView == resultView ? "bg-[#6B818C] px-3 py-1 text-white text-base rounded-lg" : "text-gray-500";
    }

    private async Task<List<Models.Ergast.Driver>> GetDriverList()
    {
        var drivers = await _ergastService.GetDrivers();
        return drivers;
    }

    private async Task<List<Models.Ergast.DriverStandings>> GetDriverListWithConstructor()
    {
        var driversList = await _ergastService.GetCurrentDriverStandings();
        return driversList;
    }
}