@inject FormulaOneTech.Services.Ergast.IErgastService _ergastService;
@using Models.Ergast;
<h3>Formula 1 Technical</h3>

@if(isLoading)
{
    <p>Loading</p>
}
else
{
    if (Drivers != null)
    {
        foreach(var driver in Drivers)
        {
            <p><span class="text-lg text-purple-500">@driver.Position</span>@driver.Driver.GivenName <span>@driver.Points</span></p>
            <p>@driver.Constructors.FirstOrDefault()?.Name</p>
        }
    }
}


@code {
    public List<Models.Ergast.DriverStandings> Drivers { get; set; }

    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        Drivers = await GetCurrentDriverStandings();
        isLoading = false;
    }

    private async Task<List<Models.Ergast.DriverStandings>> GetCurrentDriverStandings()
    {
        var drivers = await _ergastService.GetCurrentDriverStandings();
        return drivers;
    }
}
